#!/usr/bin/env bash
# Tested with Bash 5.0.3

set -eu

# Docker-compose must be installed
if ! [ -x "$(command -v docker-compose)" ]; then
  echo 'Error: docker-compose is not installed.' >&2
  exit 1
fi

# User inputs
domains=()
read -rp 'Email []: ' email
read -rp 'RSA key size [4096]: ' rsa_key_size
read -rp 'Data path [./data/certbot]: ' data_path
read -rp 'Staging [0]? ' staging # Set to 1 to avoid hitting request limits
while [ ${#domains[@]} -eq 0 ]; do read -r -p 'Domains []? ' -a domains; done

rsa_key_size=${rsa_key_size:-4096}
data_path=${data_path:-./data/certbot}
staging=${staging:-0}

# If the data path already exists, we assume we are going to overwrite certificates.
# Asks user's confirmation.
if [ -d "$data_path" ]; then
  read -p "Existing data found for $domains. Continue and replace existing certificate? (y/N) " decision
  if [ "$decision" != "Y" ] && [ "$decision" != "y" ]; then
    exit
  fi
fi

# Download Certbot TLS configuration
if [ ! -e "$data_path/conf/options-ssl-nginx.conf" ] || [ ! -e "$data_path/conf/ssl-dhparams.pem" ]; then
  echo "Downloading Certbot TLS configuration..."
  mkdir -p "$data_path/conf"
  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf > "$data_path/conf/options-ssl-nginx.conf"
  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem > "$data_path/conf/ssl-dhparams.pem"
fi

# Create dummy certificates
echo "Creating dummy certificate for $domains..."
path="/etc/letsencrypt/live/$domains"
mkdir -p "$data_path/conf/live/$domains"
docker-compose run --rm --entrypoint "\
  openssl req -x509 -nodes -newkey rsa:1024 -days 1\
    -keyout '$path/privkey.pem' \
    -out '$path/fullchain.pem' \
    -subj '/CN=localhost'" certbot

# Start Kibana
echo "Starting Kibana..."
docker-compose up --force-recreate -d kib01
echo "Waiting for kibana to start ..."
sleep 30s #TODO: check Health instead

# Start Nginx
echo "Starting Nginx..."
docker-compose up --force-recreate -d nginx

# Delete dummy certificates
echo "Deleting dummy certificate for $domains..."
docker-compose run --rm --entrypoint "\
  rm -Rf /etc/letsencrypt/live/$domains && \
  rm -Rf /etc/letsencrypt/archive/$domains && \
  rm -Rf /etc/letsencrypt/renewal/$domains.conf" certbot

# Request certificate
echo "Requesting Let's Encrypt certificate for $domains..."
domain_args=""
for domain in "${domains[@]}"; do
  domain_args="$domain_args -d $domain"
done

case "$email" in
  "") email_arg="--register-unsafely-without-email" ;;
  *) email_arg="--email $email" ;;
esac

staging_arg=""
if [ $staging != "0" ]; then staging_arg="--staging"; fi

docker-compose run --rm --entrypoint "\
  certbot certonly --webroot -w /var/www/certbot \
    $staging_arg \
    $email_arg \
    $domain_args \
    --rsa-key-size $rsa_key_size \
    --agree-tos \
    --force-renewal" certbot

echo "Stopping the stack ..."
docker-compose down
